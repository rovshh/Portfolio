import os
import boto3
import random


def upload_files_to_s3(local_folder_path, s3_bucket_name):
    aws_access_key_id = 'AKIA6GNGZN65BSXMU24Q'
    aws_secret_access_key = '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'
    aws_region = 'eu-central-1'

    s3 = boto3.client('s3', aws_access_key_id=aws_access_key_id, aws_secret_access_key=aws_secret_access_key,
                      region_name=aws_region)

    for root, dirs, files in os.walk(local_folder_path):
        for file_name in files:
            local_file_path = os.path.join(root, file_name)
            s3_key = os.path.join(file_name)

            s3.upload_file(local_file_path, s3_bucket_name, s3_key)
            print(f'Successfully uploaded {file_name} to {s3_bucket_name}/{s3_key}')

    s3_folder_link = f"https://{s3_bucket_name}.s3.amazonaws.com//"

    return s3_folder_link


def generate_test_cases(file_type, num_files):
    output_folder = f"test_cases/{file_type}_files"
    os.makedirs(output_folder, exist_ok=True)

    for i in range(1, num_files + 1):
        file_content = generate_file_content(file_type)
        file_path = os.path.join(output_folder, f"{file_type}_file_{i}.txt")

        with open(file_path, 'w') as file:
            file.write(file_content)

    return output_folder


def generate_file_content(file_type):
    if file_type == 'A':
        return generate_type_a_content()
    elif file_type == 'B':
        return generate_type_b_content()
    elif file_type == 'C':
        return generate_type_c_content()
    else:
        raise ValueError("Invalid file type")


def generate_type_a_content():
    equations = []
    for _ in range(random.randint(5, 10)):
        a = random.randint(-100, 100)
        b = random.randint(-100, 100)
        operator = random.choice(['+', '-', '*', '/'])
        equation = f"{a} {operator} {b}"
        equations.append(equation)
    return '\n'.join(equations)


def generate_type_b_content():
    words = ['apple', 'banana', 'cherry', 'dog', 'elephant', 'fruits', 'gorilla']
    random.shuffle(words)
    return '\n'.join(words)


def generate_type_c_content():
    binaries = []
    for _ in range(random.randint(5, 10)):
        binary_length = random.randint(8, 16)
        binary_value = ''.join(random.choice('01') for _ in range(binary_length))
        binaries.append(binary_value)
    return '\n'.join(binaries)


if __name__ == "__main__":
    s3_bucket_name = 'chipi'



    num_files_per_type = 100
    for file_type in ['A', 'B', 'C']:
        output_folder = generate_test_cases(file_type, num_files_per_type)
        print(f"Generated {num_files_per_type} files of Type {file_type} in folder: {output_folder}")
        s3_link = upload_files_to_s3(output_folder, s3_bucket_name)
        print(f"S3 Folder Link for Type {file_type}: {s3_link}")

